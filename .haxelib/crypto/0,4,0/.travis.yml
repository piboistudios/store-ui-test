language: haxe

cache:
  timeout: 1000
  directories:
    - $HOME/.opam
    - $HOME/neko
    - $HOME/apt-cache
    - $HOME/hxcache
    - $HOME/lua_env
    - $HOME/.luarocks

before_cache:
  - if [ $TRAVIS_OS_NAME = 'linux' ]; then
      sudo apt-get autoclean;
      sudo rm -f $HOME/apt-cache/lock || true;
    fi
  # somehow these files are recreated everytime
  - rm -f $HOME/lua_env/lib/liblua51.a
  - rm -f $HOME/lua_env/lib/liblua52.a
  - rm -f $HOME/lua_env/lib/liblua53.a
  - rm -f $HOME/lua_env/lib/libluajit-5.1.a
  #- if [ $TRAVIS_OS_NAME = 'osx' ]; then brew cleanup; fi
  
  
install_linux: &install_linux
  # Install dependencies
  - export APT_CACHE_DIR=~/apt-cache && mkdir -pv $APT_CACHE_DIR
  - sudo apt-get update -y
  - sudo apt-get -o dir::cache::archives="$APT_CACHE_DIR" install -y
      aspcud
      libpcre3-dev
      zlib1g-dev
      libgtk2.0-dev
      ninja-build
      awscli
      $JOB_DEPENDENCIES
  # Setup JDK
  - jdk_switcher use oraclejdk7
  - java -version

install_osx: &install_osx
  - (nvm ls 8 || nvm install 8) && nvm use 8
  # Install dependencies
  - travis_retry brew update --merge
  - brew uninstall --force brew-cask # https://github.com/caskroom/homebrew-cask/pull/15381
  - travis_retry brew bundle --file=tests/Brewfile

# TravisCI by default run on linux.
# Let's enable both linux and mac builds because why not?
matrix:
  include:
    #########
    # linux #
    #########
    - os: linux
      env:
        - TEST=neko
      #install: *install_linux
      
    - os: linux
      env:
        - TEST=macro,hl,js,php,flash9,java,cs,python,lua
      before_install:
        - "export DISPLAY=:99.0"
        - "sh -e /etc/init.d/xvfb start"
        - "export AUDIODEV=null"
      #install: *install_linux
        
    - os: linux
      env:
        - TEST=cpp
        - HXCPP_COMPILE_THREADS=4
        - HXCPP_COMPILE_CACHE=~/hxcache
        - JOB_DEPENDENCIES="gcc-multilib g++-multilib"
      #install: *install_linux
        
    #######
    # osx #
    #######
    - os: osx
      osx_image: xcode7.3 # to compile binaries that support older versions of Mac, and 10.11 is the min version that brew provides bottles
      env:
        - TEST=neko
      #install: *install_osx
      
    - os: osx
      env:
        - TEST=macro,hl,java,cs,lua,js,php,flash9,python
      #install: *install_osx
    
    - os: osx
      osx_image: xcode9.4 # to compile faster
      env:
        - TEST=cpp
        - HXCPP_COMPILE_CACHE=~/hxcache
        - HXCPP_COMPILE_THREADS=4
      #install: *install_osx

# Let's use Ubuntu Trusty instead of Precise, which reached its EOL on April 28, 2017.
dist: trusty

# Test with Haxe 3.4.7 and Haxe development.
haxe:
# - "3.4.7"
  - development

neko: "2.2.0"

addons:
  # This is the preferred way to install apt packages.
  # However, it only allow some but not all packages.
  # Alternatively, we can use `sudo apt-get install ...` in the `install:` section.
  # http://docs.travis-ci.com/user/apt/#Adding-APT-Packages
  apt:
    packages:
      # C++ (for rebuilding hxcpp)
      - gcc-multilib
      - g++-multilib
      # HashLink
      - ninja-build
      - zlib1g-dev
      # Python
      - python3
      # C#
      - mono-devel
      - mono-mcs
      # Flash
      - libglib2.0
      - libfreetype6
      # Lua
      - cmake3
      - lua5.1
      - luarocks
      - libpcre3-dev
      - libssl-dev

install:
  # os-specific config
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
      export DISPLAY=:99.0;
      export AUDIODEV=null;
      phpenv global 7.0;
    elif [ "${TRAVIS_OS_NAME}" = "osx" ]; then
      brew update;
      brew install mono;
      brew install phantomjs;
      brew upgrade python;
      brew install php;
      brew install ninja;
    fi
  # Haxe Lua dependencies
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
      sudo luarocks install luasec OPENSSL_LIBDIR=/usr/lib/x86_64-linux-gnu;
      sudo luarocks install lrexlib-pcre PCRE_LIBDIR=/usr/lib/x86_64-linux-gnu;
      sudo luarocks install luabitop;
    elif [ "${TRAVIS_OS_NAME}" = "osx" ]; then
      brew install lua luarocks pcre python;
      sudo luarocks install lrexlib-pcre;
      sudo luarocks install luasocket;
    fi
  - sudo luarocks install luv
  - sudo luarocks install environ
  - sudo luarocks install luautf8
  # Download and setup a standalone flash player debugger
  - haxe flash/install.hxml
  # Install haxelibs
  - if [ "${TRAVIS_HAXE_VERSION}" = "development" ]; then
      haxelib git hxcpp https://github.com/HaxeFoundation/hxcpp.git;
      pushd $(haxelib path hxcpp | head -1);
        pushd tools/hxcpp; haxe compile.hxml; popd;
        pushd project; neko build.n; popd;
      popd;
    else
      haxelib install hxcpp;
    fi
  - haxelib install hxjava
  - haxelib install hxcs
  - haxelib list

script:
  - cd tests
  - haxe -version
  - haxe RunCi.hxml
