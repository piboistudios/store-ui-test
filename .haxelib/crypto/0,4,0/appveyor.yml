version: "{build}"

environment:
  global:
    HAXELIB_ROOT: C:\projects\haxelib
  matrix:
    - ARCH: 64
      TEST: "neko,hl,python,cs,java,php,macro"
    - ARCH: 64
      TEST: "cpp"

install:
  # http://help.appveyor.com/discussions/problems/5616-not-able-to-build-due-to-problem-in-chocolateyinstallps1
  - ps: Set-Service wuauserv -StartupType Manual
  # Install the neko chocolatey package (https://chocolatey.org/packages/neko)
  - cinst neko --version 2.2.0 -y
  # Install the haxe chocolatey package (https://chocolatey.org/packages/haxe)
  - cinst haxe --prerelease --ignore-dependencies -s 'https://ci.appveyor.com/nuget/haxe' -y
  - RefreshEnv
  - neko -version
  - haxe -version
  # Setup haxelib
  - mkdir "%HAXELIB_ROOT%"
  - haxelib setup "%HAXELIB_ROOT%"
  # Install test dependencies
  - cinst phantomjs -y
  # Install php
  - choco install php --version 7.2.0 -y
  - echo extension=php_openssl.dll >> C:\tools\php72\php.ini
  - echo extension=php_mbstring.dll >> C:\tools\php72\php.ini
  - echo extension=php_sockets.dll >> C:\tools\php72\php.ini
  - RefreshEnv
  # setup python
  - cmd: mklink C:\Python34-x64\python3.exe C:\Python34-x64\python.exe
  - set PATH=%PATH%;C:\Python34-x64
  # Install lua using hererocks
  - pip install hererocks
  - hererocks luaenv --lua 5.3 -rlatest
  - call luaenv\bin\activate
  # Download and setup a standalone flash player debugger
  - haxe flash/install.hxml
  # Install project dependencies
  # `> log.txt || type log.txt` is for muting the output unless there is an error
  - haxelib install hxcpp  > log.txt || type log.txt && cmd /C exit 1
  - haxelib install hxjava > log.txt || type log.txt && cmd /C exit 1
  - haxelib install hxcs   > log.txt || type log.txt && cmd /C exit 1
  - haxelib list

# We don't use the build section, but do both build and 
# test in `test_script:`.
# It is just because it is more similar to the TravisCI config,
# thus it would be easier to update both of them.
build: off

test_script:
  - cd tests
  - haxe -version
  - haxe RunCi.hxml
